/*******************************************************
 *
 * THIS FILE IS AUTO-GENERATED, DO NOT EDIT THIS FILE!
 * To edit this file, edit the auto-coder located
 * in TLM/
 *
 ******************************************************/

#include "servers/HSTStructs.h"
#include "util/serialize.h"
namespace AllStar{
namespace Servers{

CDHStatus::serialize() {
  this->serialize_float(this->cpu1);
  this->serialize_float(this->cpu5);
  this->serialize_float(this->cpu15);
  this->serialize_float(this->memory);
}

CDHStatus::deserialize() {
  this->cpu1 = this->deserialize_float();
  this->cpu5 = this->deserialize_float();
  this->cpu15 = this->deserialize_float();
  this->memory = this->deserialize_float();
}

ACSStatus::serialize() {
  this->serialize_uint32(this->MRP_X);
  this->serialize_uint32(this->MRP_Y);
  this->serialize_uint32(this->MRP_Z);
  this->serialize_uint32(this->ST_Status);
  this->serialize_uint32(this->RW_Speed_X);
  this->serialize_uint32(this->RW_Speed_Y);
  this->serialize_uint32(this->RW_Speed_Z);
}

ACSStatus::deserialize() {
  this->MRP_X = this->deserialize_uint32();
  this->MRP_Y = this->deserialize_uint32();
  this->MRP_Z = this->deserialize_uint32();
  this->ST_Status = this->deserialize_uint32();
  this->RW_Speed_X = this->deserialize_uint32();
  this->RW_Speed_Y = this->deserialize_uint32();
  this->RW_Speed_Z = this->deserialize_uint32();
}

PLDStatus::serialize() {
  this->serialize_uint8(this->powerFault);
  this->serialize_uint16(this->motorSpeed);
  for (int iter = 0; iter < 10; iter++) {
    this->serialize_uint8(this->thermistors[iter]);
  }
  this->serialize_uint8(this->acdDataWorking);
  this->serialize_uint16(this->control);
  this->serialize_uint8(this->byteSize);
}

PLDStatus::deserialize() {
  this->powerFault = this->deserialize_uint8();
  this->motorSpeed = this->deserialize_uint16();
  for (int iter = 0; iter < 10; iter++) {
    this->thermistors[iter] = this->deserialize_uint8();
  }
  this->acdDataWorking = this->deserialize_uint8();
  this->control = this->deserialize_uint16();
  this->byteSize = this->deserialize_uint8();
}

EPSStatus::serialize() {
  this->serialize_uint16(this->current3v3);
  this->serialize_uint16(this->voltage3v3);
  this->serialize_uint16(this->currentVbat);
  this->serialize_uint16(this->voltageVbat);
  this->serialize_uint16(this->current12v);
  this->serialize_uint16(this->voltage12v);
  this->serialize_uint16(this->remainingCapacity);
  this->serialize_uint16(this->battCurrent);
  this->serialize_uint16(this->battVoltage);
  this->serialize_uint16(this->battStatus);
  this->serialize_uint16(this->frangCurrent);
  this->serialize_uint16(this->frangVoltage);
  this->serialize_uint16(this->convCurrentX);
  this->serialize_uint16(this->convThreshX);
  this->serialize_uint16(this->convCurrentY);
  this->serialize_uint16(this->convThreshY);
  this->serialize_uint16(this->convCurrentW);
  this->serialize_uint16(this->convThreshW);
}

EPSStatus::deserialize() {
  this->current3v3 = this->deserialize_uint16();
  this->voltage3v3 = this->deserialize_uint16();
  this->currentVbat = this->deserialize_uint16();
  this->voltageVbat = this->deserialize_uint16();
  this->current12v = this->deserialize_uint16();
  this->voltage12v = this->deserialize_uint16();
  this->remainingCapacity = this->deserialize_uint16();
  this->battCurrent = this->deserialize_uint16();
  this->battVoltage = this->deserialize_uint16();
  this->battStatus = this->deserialize_uint16();
  this->frangCurrent = this->deserialize_uint16();
  this->frangVoltage = this->deserialize_uint16();
  this->convCurrentX = this->deserialize_uint16();
  this->convThreshX = this->deserialize_uint16();
  this->convCurrentY = this->deserialize_uint16();
  this->convThreshY = this->deserialize_uint16();
  this->convCurrentW = this->deserialize_uint16();
  this->convThreshW = this->deserialize_uint16();
}


/*******************************************************
 *
 * THIS FILE IS AUTO-GENERATED, DO NOT EDIT THIS FILE!
 * To edit this file, edit the auto-coder located
 * in TLM/auto_code/py
 *
 ******************************************************/

#ifndef TLM_H_
#define TLM_H_

#include <stdint.h>
#include "util/serialize.h"
#include "servers/FMGServer.h"

void TLM_STARTUP_ERROR(void);
void TLM_SERVERS_CREATED(void);
void TLM_MAIN_EXIT(void);
void TLM_RESTART_THREAD(uint8 arg0);
void TLM_SPI_ACS_TX_FAIL(uint8 arg0);
void TLM_SPI_COM_TX_FAIL(uint8 arg0);
void TLM_SPI_EPS_TX_FAIL(uint8 arg0);
void TLM_SPI_PLD_TX_FAIL(uint8 arg0);
void TLM_GPS_CONFIG_FAIL(void);
void TLM_MODE_SWITCH(uint8 arg0);
void TLM_SYS_CALL(int16 arg0);
void TLM_RESET_COMMANDED(void);
void TLM_DAILY_RESET(void);
void TLM_TX_SILENCE_ENTERED(void);
void TLM_TX_SILENCE_EXITED(void);
void TLM_DWLK_CLEARED(int16 arg0);
void TLM_UPLK_CLEARED(int16 arg0);
void TLM_IMMED_CLEARED(int16 arg0);
void TLM_UFTP_RETURN_STATUS(int32 arg0);
void TLM_UNKNOWN_FSW_COMMAND(uint8 arg0);
void TLM_LOAD_NEW_SCHEDULE(void);
void TLM_LOAD_DEFAULT_SCHEDULE(void);
void TLM_SCHEDULE_BAD_SIZE(void);
void TLM_SCHEDULE_BAD_ITEM(void);
void TLM_SCHEDULE_BAD_READ(void);
void TLM_SCHEDULE_BAD_OPEN(void);
void TLM_IEF_BAD_OPEN(void);
void TLM_IEF_BAD_PASSWORD(void);
void TLM_IEF_INCOMPLETE_TYPE(uint8 arg0);
void TLM_IEF_INCOMPLETE_CMD(uint8 arg0);
void TLM_IEF_INCOMPLETE_ARCHIVE(uint8 arg0);
void TLM_IEF_INCOMPLETE_DIRECTORY(uint8 arg0);
void TLM_IEF_INCOMPLETE_NUMBER(uint8 arg0);
void TLM_IEF_INCOMPLETE_REGEX(uint8 arg0);
void TLM_IEF_INVALID_CNUMBER(uint8 arg0);
void TLM_IEF_INVALID_NUMBER(uint8 arg0);
void TLM_IEF_UNKNOWN_COMMAND(uint8 arg0);
void TLM_DRF_BAD_OPEN(void);
void TLM_DRF_BAD_PASSWORD(void);
void TLM_DRF_INCOMPLETE_RAD(uint8 arg0);
void TLM_DRF_INCOMPLETE_PASSNUM(uint8 arg0);
void TLM_DRF_INCOMPLETE_STARTNUM(uint8 arg0);
void TLM_DRF_INCOMPLETE_ENDNUM(uint8 arg0);
void TLM_DRF_INVALID_PASSNUM(uint8 arg0);
void TLM_DRF_INVALID_STARTNUM(uint8 arg0);
void TLM_DRF_INVALID_ENDNUM(uint8 arg0);
void TLM_DRF_INCOMPLETE_ARCHIVE(uint8 arg0);
void TLM_DRF_INCOMPLETE_DIRECTORY(uint8 arg0);
void TLM_DRF_INCOMPLETE_NUMBER(uint8 arg0);
void TLM_DRF_INCOMPLETE_REGEX(uint8 arg0);
void TLM_DRF_INVALID_NUMBER(uint8 arg0);
void TLM_DRF_FAILED_SPLIT(uint8 arg0);
void TLM_DRF_FAILED_DELETE(uint8 arg0);
void TLM_DRF_FILESIZE_ERROR(uint8 arg0);
void TLM_DRF_PACKAGE_ERROR(uint8 arg0);
void TLM_DRF_FILENAME_ERROR(void);
void TLM_DLT_BAD_OPEN(void);
void TLM_DLT_BAD_PASSWORD(void);
void TLM_DLT_INCOMPLETE_DIRECTORY(uint8 arg0);
void TLM_DLT_INCOMPLETE_NUMBER(uint8 arg0);
void TLM_DLT_INCOMPLETE_REGEX(uint8 arg0);
void TLM_DLT_INVALID_NUMBER(uint8 arg0);
void TLM_DLT_INVALID_COMMAND(uint8 arg0);
void TLM_DLT_REMOVE_ERROR(uint8 arg0);
void TLM_PPE_BAD_OPEN(void);
void TLM_PPE_BAD_PASSWORD(void);
void TLM_PPE_INCOMPLETE_TYPE(uint8 arg0);
void TLM_PPE_INCOMPLETE_COMMAND(uint8 arg0);
void TLM_PPE_INVALID_NUMBER(uint8 arg0);
void TLM_SPI_ACS_RX(uint8 arg0);
void TLM_SPI_COM_RX(uint8 arg0);
void TLM_SPI_EPS_RX(uint8 arg0);
void TLM_SPI_PLD_RX(uint8 arg0);
void TLM_SPI_ACS_TX(uint8 arg0);
void TLM_SPI_COM_TX(uint8 arg0);
void TLM_SPI_EPS_TX(uint8 arg0);
void TLM_SPI_PLD_TX(uint8 arg0);
void TLM_ACS_SERVER_STARTED(void);
void TLM_CDH_SERVER_STARTED(void);
void TLM_CMD_SERVER_STARTED(void);
void TLM_COM_SERVER_STARTED(void);
void TLM_EPS_SERVER_STARTED(void);
void TLM_ERR_SERVER_STARTED(void);
void TLM_FMG_SERVER_STARTED(void);
void TLM_GPS_SERVER_STARTED(void);
void TLM_PLD_SERVER_STARTED(void);
void TLM_SCH_SERVER_STARTED(void);
void TLM_BEGIN_PROPAGATION(void);
void TLM_END_PROPAGATION(void);
void TLM_PWR_ACS_ON(void);
void TLM_PWR_COM_ON(void);
void TLM_PWR_GPS_ON(void);
void TLM_PWR_PLD_ON(void);
void TLM_PWR_ACS_OFF(void);
void TLM_PWR_COM_OFF(void);
void TLM_PWR_GPS_OFF(void);
void TLM_PWR_PLD_OFF(void);
void TLM_RST_ACS_LO(void);
void TLM_RST_COM_LO(void);
void TLM_RST_EPS_LO(void);
void TLM_RST_PLD_LO(void);
void TLM_RST_ACS_HI(void);
void TLM_RST_COM_HI(void);
void TLM_RST_EPS_HI(void);
void TLM_RST_PLD_HI(void);
void TLM_PWR_INVALID(void);
void TLM_RST_INVALID(void);
#endif
